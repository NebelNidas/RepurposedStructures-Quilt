--------------FABRIC-------------

    public static StructureFeature<DefaultFeatureConfig> WITCH_HUTS_OAK = new GenericJigsawStructure(new Identifier(RepurposedStructures.MODID, "repurposed_structures:witch_huts/oak"), 11, 0, 0, 0, new HashSet<>());

        FabricStructureBuilder.create(new Identifier(RepurposedStructures.MODID, "witch_huts_oak"), WITCH_HUTS_OAK).step(GenerationStep.Feature.SURFACE_STRUCTURES).defaultConfig(new StructureConfig(RepurposedStructures.RSAllConfig.RSWitchHutsConfig.maxChunkDistance.witchHutsOakMaxChunkDistance, (int) (RepurposedStructures.RSAllConfig.RSWitchHutsConfig.maxChunkDistance.witchHutsOakMaxChunkDistance * 0.5f), 741641348)).superflatFeature(WITCH_HUTS_OAK.configure(FeatureConfig.DEFAULT)).register();

    public static ConfiguredStructureFeature<DefaultFeatureConfig, ? extends StructureFeature<DefaultFeatureConfig>> WITCH_HUTS_OAK = RSStructures.WITCH_HUTS_OAK.configure(FeatureConfig.DEFAULT);

        Registry.register(registry, new Identifier(RepurposedStructures.MODID, "witch_huts_oak"), WITCH_HUTS_OAK);

        addTags(RSStructures.WITCH_HUTS_OAK, Stream.of(STRUCTURE_TAGS.WITCH_HUTS, STRUCTURE_TAGS.NO_LAKES).collect(Collectors.toSet()));

        addToBiome("witch_huts_oak",
                (context) -> 
						&& BiomeSelection.isBiomeAllowed(context, "witch_huts")
                        && RepurposedStructures.RSAllConfig.RSWitchHutsConfig.maxChunkDistance.witchHutsOakMaxChunkDistance != 1001
                        && (BiomeSelection.hasNamespace(context, "minecraft") || RepurposedStructures.RSAllConfig.RSWitchHutsConfig.blacklist.addWitchHutsOakToModdedBiomes),
                context -> context.getGenerationSettings().addBuiltInStructure(RSConfiguredStructures.WITCH_HUTS_OAK));

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("Add Oak Witch Huts to modded Forest biomes that"
                + "\nare not birch or dark oak.")
        public boolean addWitchHutsOakToModdedBiomes = true;

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("How rare are Oak Witch Huts in Forest biomes that"
                + "\nare not birch or dark oak. 1 for spawning in most"
                + "\nchunks and 1001 for none.")
        @ConfigEntry.BoundedDiscrete(min = 1, max = 1001)
        public int witchHutsOakMaxChunkDistance = 48;

  "advancements.repurposed_structures.witch_huts_oak.title": "No forest is safe from Witches! Not even Oak!",
  "advancements.repurposed_structures.witch_huts_oak.description": "Enter a Oak Witch Hut",

  "text.autoconfig.repurposed_structures-main.option.RSWitchHutsConfig.maxChunkDistance.witchHutsOakMaxChunkDistance": "Witch Huts Oak Max Chunk Distance",
  "text.autoconfig.repurposed_structures-main.option.RSWitchHutsConfig.maxChunkDistance.witchHutsOakMaxChunkDistance.@PrefixText": "How rare are Oak Witch Huts in Forest biomes that are not birch or dark oak. 1 for spawning in most chunks and 1001 for none. ",
  "text.autoconfig.repurposed_structures-main.option.RSWitchHutsConfig.blacklist.addWitchHutsOakToModdedBiomes": "Add Witch Huts Oak To Modded Biomes",
  "text.autoconfig.repurposed_structures-main.option.RSWitchHutsConfig.blacklist.addWitchHutsOakToModdedBiomes.@PrefixText": "Add Oak Witch Huts to modded Forest biomes that are not birch or dark oak.",


--------------FORGE-------------

        public static final RegistryObject<Structure<NoFeatureConfig>> WITCH_HUTS_OAK = addToStructureMaps("witch_huts_oak", () -> (new GenericJigsawStructure(new ResourceLocation(RepurposedStructures.MODID, "repurposed_structures:witch_huts/oak"), 11, 0, 0, 0, new HashSet<>())));

        addToStructureMaps(new ResourceLocation(RepurposedStructures.MODID, "witch_huts_oak"), WITCH_HUTS_OAK.get(), GenerationStage.Decoration.SURFACE_STRUCTURES, new StructureSeparationSettings(RepurposedStructures.RSWitchHutsConfig.witchHutsOakMaxChunkDistance.get(), (int) (RepurposedStructures.RSWitchHutsConfig.witchHutsOakMaxChunkDistance.get() * 0.5f), 741641348));
    

    public static StructureFeature<NoFeatureConfig, ? extends Structure<NoFeatureConfig>> WITCH_HUTS_OAK = RSStructures.WITCH_HUTS_OAK.get().configure(IFeatureConfig.NO_FEATURE_CONFIG);

        Registry.register(registry, new ResourceLocation(RepurposedStructures.MODID, "witch_huts_oak"), WITCH_HUTS_OAK);

        addTags(RSStructures.WITCH_HUTS_OAK.get(), Stream.of(STRUCTURE_TAGS.WITCH_HUTS, STRUCTURE_TAGS.NO_LAKES).collect(Collectors.toSet()));

        if ( &&
            RepurposedStructures.RSWitchHutsConfig.witchHutsOakMaxChunkDistance.get() != 1001 &&
            (BiomeSelection.hasNamespace(event, "minecraft") || RepurposedStructures.RSWitchHutsConfig.addWitchHutsOakToModdedBiomes.get()))
        {
            event.getGeneration().getStructures().add(() -> RSConfiguredStructures.WITCH_HUTS_OAK);
        }

		public ConfigValueListener<Integer> witchHutsOakMaxChunkDistance;
		public ConfigValueListener<Boolean> addWitchHutsOakToModdedBiomes;

                witchHutsOakMaxChunkDistance = subscriber.subscribe(builder
                    .comment("Add Oak Witch Huts to modded Forest biomes that"
                + "\nare not birch or dark oak.")
                    .translation("repurposedstructures.config.witch_huts.witchhutsoakmaxchunkdistance")
                    .defineInRange("witchHutsOakMaxChunkDistance", 48, 1, 1001));

                addWitchHutsOakToModdedBiomes = subscriber.subscribe(builder
                    .comment("Add Oak Witch Huts to modded Forest biomes that"
                + "\nare not birch or dark oak.")
                    .translation("repurposedstructures.config.witch_huts.addwitchhutsoaktomoddedbiomes")
                    .define("addWitchHutsOakToModdedBiomes", true));

  "advancements.repurposed_structures.witch_huts_oak.title": "No forest is safe from Witches! Not even Oak!",
  "advancements.repurposed_structures.witch_huts_oak.description": "Enter a Oak Witch Hut"
