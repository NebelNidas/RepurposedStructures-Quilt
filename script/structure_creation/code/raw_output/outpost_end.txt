--------------FABRIC-------------

    public static StructureFeature<DefaultFeatureConfig> OUTPOST_END = new GenericJigsawStructure(new Identifier(RepurposedStructures.MODID, "outposts/outpost_end"), 11, 0, 0, 0, new HashSet<>());

        FabricStructureBuilder.create(new Identifier(RepurposedStructures.MODID, "outpost_end"), OUTPOST_END).step(GenerationStep.Feature.SURFACE_STRUCTURES).defaultConfig(new StructureConfig(RepurposedStructures.RSAllConfig.RSOutpostsConfig.maxChunkDistance.outpostEndMaxChunkDistance, (int) (RepurposedStructures.RSAllConfig.RSOutpostsConfig.maxChunkDistance.outpostEndMaxChunkDistance * 0.5f), 831830630)).superflatFeature(OUTPOST_END.configure(FeatureConfig.DEFAULT)).adjustsSurface().register();

    public static ConfiguredStructureFeature<DefaultFeatureConfig, ? extends StructureFeature<DefaultFeatureConfig>> OUTPOST_END = RSStructures.OUTPOST_END.configure(FeatureConfig.DEFAULT);

        Registry.register(registry, new Identifier(RepurposedStructures.MODID, "outpost_end"), OUTPOST_END);

        addTags(RSStructures.OUTPOST_END, Stream.of(STRUCTURE_TAGS.OUTPOST).collect(Collectors.toSet()));

        GeneralUtils.addToBiome("outpost_end",
                (context) -> 
						&& BiomeSelection.isBiomeAllowed(context, "outposts")
                        && RepurposedStructures.RSAllConfig.RSOutpostsConfig.maxChunkDistance.outpostEndMaxChunkDistance != 1001),
                context -> context.getGenerationSettings().addBuiltInStructure(RSConfiguredStructures.OUTPOST_END));

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("Add End Outposts to modded End biomes.")
        public boolean addOutpostEndToModdedBiomes = true;

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("How rare are End Outposts in End biomes. 1 for"
                + "\nspawning in most chunks and 1001 for none.")
        @ConfigEntry.BoundedDiscrete(min = 1, max = 1001)
        public int outpostEndMaxChunkDistance = 55;

--------------FORGE-------------

    public static final RegistryObject<Structure<NoFeatureConfig>> OUTPOST_END = addToStructureMaps("outpost_end", () -> (new GenericJigsawStructure(new ResourceLocation(RepurposedStructures.MODID, "outposts/outpost_end"), 11, 0, 0, 0, new HashSet<>())));

        addToTerraformingAndStructureMaps(new ResourceLocation(RepurposedStructures.MODID, "outpost_end"), OUTPOST_END.get(), GenerationStage.Decoration.SURFACE_STRUCTURES, new StructureSeparationSettings(RepurposedStructures.RSOutpostsConfig.outpostEndMaxChunkDistance.get(), (int) (RepurposedStructures.RSOutpostsConfig.outpostEndMaxChunkDistance.get() * 0.5f), 831830630));

    public static StructureFeature<NoFeatureConfig, ? extends Structure<NoFeatureConfig>> OUTPOST_END = RSStructures.OUTPOST_END.get().configure(IFeatureConfig.NO_FEATURE_CONFIG);

        Registry.register(registry, new ResourceLocation(RepurposedStructures.MODID, "outpost_end"), OUTPOST_END);

        addTags(RSStructures.OUTPOST_END.get(), Stream.of(STRUCTURE_TAGS.OUTPOST).collect(Collectors.toSet()));

        if ( &&
            RepurposedStructures.RSOutpostsConfig.outpostEndMaxChunkDistance.get() != 1001 &&
            (BiomeSelection.hasNamespace(event, "minecraft") || RepurposedStructures.RSOutpostsConfig.addOutpostEndToModdedBiomes.get()))
        {
            event.getGeneration().getStructures().add(() -> RSConfiguredStructures.OUTPOST_END);
        }

		public ConfigValueListener<Integer> outpostEndMaxChunkDistance;
		public ConfigValueListener<Boolean> addOutpostEndToModdedBiomes;

                outpostEndMaxChunkDistance = subscriber.subscribe(builder
                    .comment("Add End Outposts to modded End biomes.")
                    .translation("repurposedstructures.config.outposts.outpostendmaxchunkdistance")
                    .defineInRange("outpostEndMaxChunkDistance", 55, 1, 1001));

                addOutpostEndToModdedBiomes = subscriber.subscribe(builder
                    .comment("Add End Outposts to modded End biomes.")
                    .translation("repurposedstructures.config.outposts.addoutpostendtomoddedbiomes")
                    .define("addOutpostEndToModdedBiomes", true));