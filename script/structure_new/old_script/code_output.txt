Fabric code: 



    public static StructureFeature<DefaultFeatureConfig> OUTPOST_BIRCH = new GenericJigsawStructure(new Identifier(RepurposedStructures.MODID, "outposts/birch/base_plates"), 11, 0);
        FabricStructureBuilder.create(new Identifier(RepurposedStructures.MODID, "outpost_birch"), OUTPOST_BIRCH).step(GenerationStep.Feature.SURFACE_STRUCTURES).defaultConfig(new StructureConfig(RepurposedStructures.RSAllConfig.RSOutpostsConfig.outposts.outpostBirchMaxChunkDistance, (int) (RepurposedStructures.RSAllConfig.RSOutpostsConfig.outposts.outpostBirchMaxChunkDistance * 0.5f), 1676743168)).superflatFeature(OUTPOST_BIRCH.configure(FeatureConfig.DEFAULT)).adjustsSurface().register();

    public static ConfiguredStructureFeature<DefaultFeatureConfig, ? extends StructureFeature<DefaultFeatureConfig>> OUTPOST_BIRCH = RSStructures.OUTPOST_BIRCH.configure(FeatureConfig.DEFAULT);
        Registry.register(registry, new Identifier(RepurposedStructures.MODID, "outpost_birch"), OUTPOST_BIRCH);

        addTags(RSStructures.OUTPOST_BIRCH, Stream.of(STRUCTURE_TAGS.OUTPOST, STRUCTURE_TAGS.OVERWORLD).collect(Collectors.toSet()));

        addToBiome("outpost_birch",
                (context) -> isBiomeAllowed("outposts", context.getBiomeKey().getValue())
                        && (RepurposedStructures.RSAllConfig.RSOutpostsConfig.outposts.outpostBirchMaxChunkDistance != 1001
                        && ()
                        && (context.getBiomeKey().getValue().getNamespace().equals("minecraft")
                            || RepurposedStructures.RSAllConfig.RSOutpostsConfig.outposts.addOutpostBirchToModdedBiomes)),
                context -> context.getGenerationSettings().addBuiltInStructure(RSConfiguredStructures.OUTPOST_BIRCH));

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("nothing)
        public boolean addOutpostBirchToModdedBiomes = true;

        @ConfigEntry.Gui.Tooltip(count = 0)
        @ConfigEntry.Gui.PrefixText
        @Comment("How rare are Birch Outposts in Birch Forest
                + "\nbiomes." 1 for spawning in most chunks and 1001
                + "\nfor" none.)
        @ConfigEntry.BoundedDiscrete(min = 1, max = 1001)
        public int outpostBirchMaxChunkDistance = 47;

  "text.autoconfig.repurposed_structures-main.option.RSOutpostsConfig.outposts.outpostBirchMaxChunkDistance": "Outpost Birch Max Chunk Distance",
  "text.autoconfig.repurposed_structures-main.option.RSOutpostsConfig.outposts.outpostBirchMaxChunkDistance.@PrefixText":"How rare are Birch Outposts in Birch Forest biomes. 1 for spawning in most chunks and 1001 for none.",
  "text.autoconfig.repurposed_structures-main.option.RSOutpostsConfig.outposts.addOutpostBirchToModdedBiomes": "Add Outpost Birch To Modded Biomes",
  "text.autoconfig.repurposed_structures-main.option.RSOutpostsConfig.outposts.addOutpostBirchToModdedBiomes.@PrefixText":"nothing",

----------------------------
Forge code: 



    public static final RegistryObject<Structure<NoFeatureConfig>> OUTPOST_BIRCH = registerStructure("outpost_birch", () -> (new GenericJigsawStructure(NoFeatureConfig.CODEC, new ResourceLocation(RepurposedStructures.MODID, "outposts/birch/base_plates"), 11, 0)));
        registerLandscapeTransformingStructure(new ResourceLocation(RepurposedStructures.MODID, "outpost_birch"), OUTPOST_BIRCH.get(), GenerationStage.Decoration.SURFACE_STRUCTURES, new StructureSeparationSettings(RepurposedStructures.RSMainConfig.outpostBirchMaxChunkDistance.get(), (int) (RepurposedStructures.RSMainConfig.outpostBirchMaxChunkDistance.get() * 0.5f), 1676743168));

    public static StructureFeature<NoFeatureConfig, ? extends Structure<NoFeatureConfig>> OUTPOST_BIRCH = RSStructures.OUTPOST_BIRCH.get().configure(IFeatureConfig.NO_FEATURE_CONFIG);
        Registry.register(registry, new ResourceLocation(RepurposedStructures.MODID, "outpost_birch"), OUTPOST_BIRCH);

        addTags(RSStructures.OUTPOST_BIRCH.get(), Stream.of(STRUCTURE_TAGS.OUTPOST, STRUCTURE_TAGS.OVERWORLD).collect(Collectors.toSet()));

        if (RepurposedStructures.RSMainConfig.outpostBirchMaxChunkDistance.get() != 1001) {
            if (() &&
                    (event.getName().getNamespace().equals("minecraft") || RepurposedStructures.RSMainConfig.addOutpostBirchToModdedBiomes.get())) {
                event.getGeneration().getStructures().add(() -> RSConfiguredStructures.OUTPOST_BIRCH);
            }
        }

					outpostBirchMaxChunkDistance = subscriber.subscribe(builder
						.comment("How rare are Birch Outposts in Birch Forest
                + "\nbiomes." 1 for spawning in most chunks and 1001
                + "\nfor" none.)
						.translation("repurposedstructures.config.outposts.outpostbirchmaxchunkdistance")
						.defineInRange("outpostBirchMaxChunkDistance", 47, 1, 1001));

					addOutpostBirchToModdedBiomes = subscriber.subscribe(builder
						.comment("nothing)
						.translation("repurposedstructures.config.outposts.addoutpostbirchtomoddedbiomes")
						.define("addOutpostBirchToModdedBiomes", true));

		public ConfigValueListener<Integer> outpostBirchMaxChunkDistance;
		public ConfigValueListener<Boolean> addOutpostBirchToModdedBiomes;

----------------------------
Translation/Advancements code: 



  "advancements.repurposed_structures.outpost_birch.title": "Watching over the White Forest",
  "advancements.repurposed_structures.outpost_birch.description": "Enter a Birch Outpost",

{
  "parent": "repurposed_structures:outposts",
  "display": {
    "icon": {
      "item": "minecraft:birch_log"
    },
    "title": {
      "text": "Watching over the White Forest"
    },
    "description": {
      "text": "Enter a Birch Outpost"
    },
    "hidden": true
  },
  "rewards": {
    "experience": 50
  },
  "criteria": {
    "in_outpost_birch": {
      "trigger": "minecraft:location",
      "conditions": {
        "feature": "repurposed_structures:outpost_birch"
      }
    }
  },
  "requirements": [
    [
      "in_outpost_birch"
    ]
  ]
}

{
  "parent": "repurposed_structures:outposts",
  "display": {
    "icon": {
      "item": "minecraft:birch_log"
    },
    "title": {
      "translate": "advancements.repurposed_structures.outpost_birch.title"
    },
    "description": {
      "translate": "advancements.repurposed_structures.outpost_birch.description"
    },
    "hidden": true
  },
  "rewards": {
    "experience": 50
  },
  "criteria": {
    "in_outpost_birch": {
      "trigger": "minecraft:location",
      "conditions": {
        "feature": "repurposed_structures:outpost_birch"
      }
    }
  },
  "requirements": [
    [
      "in_outpost_birch"
    ]
  ]
}
