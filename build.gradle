import net.fabricmc.loom.task.RemapJarTask

buildscript {
	repositories {
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
		classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
	}
}

plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}-fabric"
group = project.maven_group

repositories {
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.fabricmc.net" }
	maven { url "https://nexus.resourcefulbees.com/repository/maven-public/" }
}

minecraft {
	accessWidener "src/main/resources/repurposed_structures.accesswidener"
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"

	modApi "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"

	modImplementation 'com.github.modmuss50:Voyager:1.0.0'
	include 'com.github.modmuss50:Voyager:1.0.0'

	modImplementation 'com.github.Draylar:angerable-patch:1.1.0-1.16.4'
	include 'com.github.Draylar:angerable-patch:1.1.0-1.16.4'
}

if (project.use_third_party_mods) {
	repositories {
		maven {	url "https://nexus.resourcefulbees.com/repository/maven-public/" }
		flatDir { dirs 'deps' }
	}

	dependencies {
		modRuntime "com.telepathicgrunt.loadnbtblock:loadnbtblock:1.0.8"
		modRuntime "com.telepathicgrunt.structure_void_toggle:structure_void_toggle-1.16.5:2.0.0"
		modRuntime "com.telepathicgrunt:Blame-Fabric:1.16.5-3.2.0-fabric"
	}
}

apply from: 'gradle/processresources.gradle'

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		it.options.release = targetVersion
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

apply from: 'gradle/maven.gradle'
apply from: 'gradle/curseforge.gradle'
apply from: 'gradle/modrinth.gradle'